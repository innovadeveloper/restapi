<?php
class HandlerApi
{
    function initRoute($app){
        /* Usando POST para crear un auto */
        // http://localhost:8888/restapi/v1/handler_api
        $app->post('/handler_api', 'authenticate', function() use ($app) {
            // check for required params
            verifyRequiredParams(array('baseUrl', 'requestUrl', 'headers'));

            $response = array();
            //capturamos los parametros recibidos y los almacxenamos como un nuevo array
            $baseUrl  = $app->request->post('baseUrl');
            $requestUrl = $app->request->post('requestUrl');
            $headersArray = $app->request->post('headers'); // arreglo de strings..
            
            if(!is_array(json_decode($headersArray)) ) 
            {
                $response["error"] = false;
                $response["message"] = "Headers no es un arreglo";
                echoResponse(500, $response);
                return;
            } 

            $httpRequests = new HttpRequests();
            $requestUrl = $httpRequests -> encodeRequestUrl($requestUrl);

            $hrefRequest = $baseUrl . $requestUrl; // https//animelist...?param1=2&param3=33

            // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
            $ch = curl_init();
            // curl_setopt($ch, CURLOPT_URL, 'https://myanimelist.net/anime/api/video/around.json?id=21&p=2');
            curl_setopt($ch, CURLOPT_URL, $hrefRequest);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');
            curl_setopt($ch, CURLOPT_ENCODING, 'gzip, deflate');
            curl_setopt($ch, CURLOPT_HTTPHEADER, $headersArray);
            
            // identificando el problema
            $result = 0;
            // $result = curl_exec($ch);

            try {
                $result = curl_exec($ch);
            } catch (Exception $e) {
                echo 'Excepción capturada: ',  $e->getMessage(), "\n";
            }

            $isJSON = $httpRequests -> isJSON($result);
            $http_status = curl_getinfo($ch, CURLINFO_HTTP_CODE);

            if (curl_errno($ch) || !$isJSON || preg_match('/\bRuntime Error\b/', strtolower($result)) || ($http_status != 200 && $http_status != 201)) {
                // lanzar error
                $response["error"] = false;
                $response["message"] = "error de solicitud";
                echoResponse(500, $response);
                curl_close($ch);
                return;
            }
            curl_close($ch);

            // respondemos la solicitud del cliente
            $response = json_decode($result); // convertimos objeto lista
            echoResponse(200, $response);
        });

        // http://localhost:8888/restapi/v1/handler_api_master
        $app->post('/handler_api_master', 'authenticate', function() use ($app) {
            // check for required params
            verifyRequiredParams(array('baseUrl', 'requestUrl', 'headers'));

            $response = array();
            //capturamos los parametros recibidos y los almacxenamos como un nuevo array
            $baseUrl  = $app->request->post('baseUrl');
            $requestUrl = $app->request->post('requestUrl');
            $headersArray = $app->request->post('headers'); // arreglo de strings..
            
            if(!is_array(json_decode($headersArray)) ) 
            {
                $response["error"] = false;
                $response["message"] = "Headers no es un arreglo";
                echoResponse(500, $response);
                return;
            } 
            
            $httpRequests = new HttpRequests();
            $requestUrl = $httpRequests -> encodeRequestUrl($requestUrl);

            $hrefRequest = $baseUrl . $requestUrl; // https//animelist...?param1=2&param3=33
            $listDomains = LIST_DOMAINS_HTTP_GET; // array($firstDomain, $secondDomain, $thirdDomain);


            $isRespuestaEnviada = False;
            $fields = array();
            //capturamos los parametros recibidos y los almacxenamos como un nuevo array

            $fields = array (
                'baseUrl' => $baseUrl,
                'requestUrl' => $requestUrl,
                'headers' => $headersArray
            );

            for ($i = 0; $i <= count($listDomains) - 1; $i++) 
            {
                $domain = $listDomains[$i];
              
                $hrefRequest = $domain; 
                // inicio de peticiòn
                // http://localhost:8888/restapi/v1/handler_api
                $ch = curl_init();
                curl_setopt($ch, CURLOPT_URL,            $hrefRequest);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true );
                curl_setopt($ch, CURLOPT_POST,           true );
                curl_setopt($ch, CURLOPT_POSTFIELDS, $fields);
                // curl_setopt($ch, CURLOPT_HTTPHEADER,    array("Cookie: MALSESSIONID=baokdo2jsvijglr3huvbk5j631; MALHLOGSESSID=cf1d15a6d6f6516cb50a7c63a023d6eb;", "Authorization: 3d524a53c110e4c22463b10ed32cef9d"));
                curl_setopt($ch, CURLOPT_HTTPHEADER,    json_decode($headersArray));
                $result=curl_exec ($ch);
                // $header[] = 'Authorization: OAuth SomeHugeOAuthaccess_tokenThatIReceivedAsAString';

                // headers:["Cookie: MALSESSIONID=baokdo2jsvijglr3huvbk5j631; MALHLOGSESSID=cf1d15a6d6f6516cb50a7c63a023d6eb;", "Authorization: 3d524a53c110e4c22463b10ed32cef9d"]
                $isJSON = $httpRequests -> isJSON($result);
                if (curl_errno($ch) || !$isJSON || preg_match('/\bRuntime Error\b/', strtolower($result))) {
                    // lanzar error
                    curl_close($ch);
                    continue;
                }
                // Comprobar el código de estado HTTP
                $http_status = curl_getinfo($ch, CURLINFO_HTTP_CODE);
                curl_close($ch);
                
                if ($http_status == 200){
                    // respondemos la solicitud del cliente
                    $response = json_decode($result); // convertimos objeto lista
                    echoResponse(200, $response);
                    $isRespuestaEnviada = True;
                    break;
                }
            }
            if(!$isRespuestaEnviada){
                $response["error"] = true;
                $response["message"] = "No se consiguió alguna respuesta satisfactoria.Lo sentimos";
                echoResponse(500, $response);
            }
        });
    }
    
}
?>